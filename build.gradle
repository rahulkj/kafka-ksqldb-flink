plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id("com.github.davidmc24.gradle.plugin.avro") version "1.9.1"
}

configurations {
    avroTools {
        transitive = false // Ensures only the primary JAR is included
    }
}

group = 'io.demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_24
    targetCompatibility = JavaVersion.VERSION_24
}

repositories {
	mavenCentral()
	maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-streams'
	implementation "org.junit.jupiter:junit-jupiter:5.13.4"
    implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    avroTools group: 'org.apache.avro', name: 'avro-tools', version: '1.12.0'
    implementation("org.apache.avro:avro:1.11.4")
    implementation("io.confluent:kafka-avro-serializer:7.9.0")
	
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

def avroGeneratedDir = layout.buildDirectory.dir("avroGenerated")
//def avroGeneratedDir = "src/main/resources/avro"
sourceSets.main.java.srcDir(avroGeneratedDir)

tasks.register("avroCompileSchema", JavaExec) {
    classpath(configurations.avroTools)
    args(
        "compile",
        "schema",
        "src/main/resources/avro",
        avroGeneratedDir.get().asFile.canonicalPath
    )
}